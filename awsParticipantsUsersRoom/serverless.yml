service: participant

custom:
  settings:
    PARTICIPANT_TABLE: participant
  apigwBinary:
    types:
      - 'multipart/form-data'
   
plugins:
 - serverless-apigw-binary


provider:
  name: aws
  runtime: nodejs12.x
  region: sa-east-1
  environment: ${self:custom.settings}
  iamRoleStatements:
   - Effect: "Allow"
     Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - s3:getObject
        - s3:putObject
     Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.PARTICIPANT_TABLE}"
        - "arn:aws:s3::*:*"
    
functions:
  createParticipant:
    handler: handler.createParticipant
    events:
    - http:
        path: /participant
        method: post
  getAllparticipants:
    handler: handler.getAllparticipant
    events:
    - http:
        path: /participants
        method: get
  getParticipantsByRoom:
    handler: handler.getParticipantByRoom
    events:
    - http:
        path: /room/participant
        method: post
  updateParticipant:
    handler: handler.updateParticipant
    events:
    - http:
        path: /room/updateparticipant
        method: post
  

resources:
  Resources:
    ParticipantTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "roomId"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        - AttributeName: "roomId"
          KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.PARTICIPANT_TABLE}